# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# TODO: Add Examples
_ref:
  path: templates/controls.yaml.njk
  vars:
    pageId: :for
    pageTitle: :for
    filePath: controls/:for.yaml
    description: |
      The `:for` control implements a for loop within a routine.
      The routine defined in the `:do` property is executed for each item within the array defined in the `:in` property. This routine is executed sequentially for each item in the array.
      The value of the current array item can be accessed using the `_item` operator with the item key set in the `:for` property. This operator is only available within the `:for` and `:parallel_for` controls.
      Mimics the below js syntax:
      ```
      for (key in array) {
        // do
      }
      ```
    schema: |
      - `:for: string`: __Required__ - Used to define the key that can be used to access the value of the array item of the current iteration.
      - `:in: array`: __Required__ - Used to define the array of data to iterate over.
      - `:do: routine`: __Required__ - Used to define the routine that will be executed for each array item.
    examples: |
      ###### Example
